import 'package:flutter/material.dart';

class TranslationService extends ChangeNotifier {
  Locale _locale = const Locale('en', '');

  Locale get locale => _locale;

  void changeLocale(Locale newLocale) {
    _locale = newLocale;
    notifyListeners();
  }

  // Translation maps
  static final Map<String, Map<String, String>> _translations = {
    'en': {
      'appTitle': 'SERP Seller',
      'settings': 'Settings',
      'appearance': 'Appearance',
      'language': 'Language',
      'theme': 'Theme',
      'light': 'Light',
      'dark': 'Dark',
      'system': 'System',
      'english': 'English',
      'arabic': 'Arabic',
      'color': 'Color',
      'business': 'Business',
      'company': 'Company',
      'tax': 'Tax',
      'currency': 'Currency',
      'security': 'Security',
      'pinCode': 'PIN Code',
      'requirePin': 'Require PIN',
      'posSettings': 'POS Settings',
      'printReceipt': 'Print Receipt',
      'receiptFooter': 'Receipt Footer',
      'askForCustomer': 'Ask for Customer',
      'showStockWarning': 'Show Stock Warning',
      'sync': 'Sync',
      'autoSync': 'Auto Sync',
      'syncInterval': 'Sync Interval',
      'minutes': 'minutes',
      'lastSync': 'Last Sync',
      'syncNow': 'Sync Now',
      'about': 'About',
      'version': 'Version',
      'privacy': 'Privacy Policy',
      'terms': 'Terms of Service',
      'retry': 'Retry',
      'save': 'Save',
      'cancel': 'Cancel',
      'reset': 'Reset to Default',
      'changesSaved': 'Changes saved successfully',
      'dashboard': 'Dashboard',
      'products': 'Products',
      'pos': 'POS',
      'inventory': 'Inventory',
      'customers': 'Customers',
      'orders': 'Orders',
      'search': 'Search...',
      'add': 'Add',
      'edit': 'Edit',
      'delete': 'Delete',
      'loading': 'Loading...',
      'error': 'Error',
      'success': 'Success',
      'noData': 'No data available',
      'companyName': 'Company Name',
      'taxRate': 'Tax Rate',
      'selectTheme': 'Select Theme',
      'selectLanguage': 'Select Language',
      'selectColor': 'Select Color',
      'companyInformation': 'Company Information',
    },
    'ar': {
      'appTitle': 'بائع سيرب',
      'settings': 'الإعدادات',
      'appearance': 'المظهر',
      'language': 'اللغة',
      'theme': 'السمة',
      'light': 'فاتح',
      'dark': 'داكن',
      'system': 'النظام',
      'english': 'الإنجليزية',
      'arabic': 'العربية',
      'color': 'اللون',
      'business': 'الأعمال',
      'company': 'الشركة',
      'tax': 'الضريبة',
      'currency': 'العملة',
      'security': 'الأمان',
      'pinCode': 'رمز PIN',
      'requirePin': 'طلب رمز PIN',
      'posSettings': 'إعدادات نقطة البيع',
      'printReceipt': 'طباعة الإيصال',
      'receiptFooter': 'تذييل الإيصال',
      'askForCustomer': 'السؤال عن العميل',
      'showStockWarning': 'عرض تحذير المخزون',
      'sync': 'المزامنة',
      'autoSync': 'مزامنة تلقائية',
      'syncInterval': 'فترة المزامنة',
      'minutes': 'دقائق',
      'lastSync': 'آخر مزامنة',
      'syncNow': 'مزامنة الآن',
      'about': 'حول',
      'version': 'الإصدار',
      'privacy': 'سياسة الخصوصية',
      'terms': 'شروط الخدمة',
      'retry': 'إعادة المحاولة',
      'save': 'حفظ',
      'cancel': 'إلغاء',
      'reset': 'إعادة التعيين',
      'changesSaved': 'تم حفظ التغييرات بنجاح',
      'dashboard': 'لوحة التحكم',
      'products': 'المنتجات',
      'pos': 'نقطة البيع',
      'inventory': 'المخزون',
      'customers': 'العملاء',
      'orders': 'الطلبات',
      'search': 'بحث...',
      'add': 'إضافة',
      'edit': 'تعديل',
      'delete': 'حذف',
      'loading': 'جاري التحميل...',
      'error': 'خطأ',
      'success': 'نجاح',
      'noData': 'لا توجد بيانات',
      'companyName': 'اسم الشركة',
      'taxRate': 'معدل الضريبة',
      'selectTheme': 'اختر السمة',
      'selectLanguage': 'اختر اللغة',
      'selectColor': 'اختر اللون',
      'companyInformation': 'معلومات الشركة',
    },
  };

  String translate(String key) {
    return _translations[_locale.languageCode]?[key] ?? key;
  }

  // Check if a key exists
  bool hasKey(String key) {
    return _translations[_locale.languageCode]?.containsKey(key) ?? false;
  }
}
